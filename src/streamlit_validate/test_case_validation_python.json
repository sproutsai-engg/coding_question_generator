[
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": [
                    1,
                    8,
                    6,
                    2,
                    5,
                    4,
                    8,
                    3,
                    7
                ],
                "expectedOutput": "49",
                "output": "49",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    1,
                    1
                ],
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    4,
                    3,
                    2,
                    1,
                    4
                ],
                "expectedOutput": "16",
                "output": "16",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    1,
                    2,
                    1
                ],
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    5,
                    4,
                    3,
                    2,
                    1
                ],
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    1,
                    1,
                    1,
                    1,
                    1
                ],
                "expectedOutput": "4",
                "output": "4",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                "expectedOutput": "25",
                "output": "25",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    10,
                    9,
                    8,
                    7,
                    6,
                    5,
                    4,
                    3,
                    2,
                    1
                ],
                "expectedOutput": "25",
                "output": "25",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20
                ],
                "expectedOutput": "100",
                "output": "100",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": [
                    20,
                    19,
                    18,
                    17,
                    16,
                    15,
                    14,
                    13,
                    12,
                    11,
                    10,
                    9,
                    8,
                    7,
                    6,
                    5,
                    4,
                    3,
                    2,
                    1
                ],
                "expectedOutput": "100",
                "output": "100",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Container With Most Water"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "abcabcbb",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "bbbbb",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "pwwkew",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "",
                "expectedOutput": "0",
                "output": "0",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "a",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abcdefg",
                "expectedOutput": "7",
                "output": "7",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aab",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abb",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abcabcabc",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abcdeffghijklmnopqrstuvwxyz",
                "expectedOutput": "21",
                "output": "21",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Longest Substring Without Repeating Characters"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "/home/",
                "expectedOutput": "/home",
                "output": "/home",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/../",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/home//foo/",
                "expectedOutput": "/home/foo",
                "output": "/home/foo",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/../../c/",
                "expectedOutput": "/c",
                "output": "/c",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a//b////c/d//././/..",
                "expectedOutput": "/a/b/c",
                "output": "/a/b/c",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../b/../c//.//",
                "expectedOutput": "/c",
                "output": "/c",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a//b////c/d//././/..",
                "expectedOutput": "/a/b/c",
                "output": "/a/b/c",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../b/../c//.//",
                "expectedOutput": "/c",
                "output": "/c",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/./c/./d/",
                "expectedOutput": "/a/b/c/d",
                "output": "/a/b/c/d",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../../../../..",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/./c/./d/",
                "expectedOutput": "/a/b/c/d",
                "output": "/a/b/c/d",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../../../../..",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/./c/./d/",
                "expectedOutput": "/a/b/c/d",
                "output": "/a/b/c/d",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../../../../..",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/./c/./d/",
                "expectedOutput": "/a/b/c/d",
                "output": "/a/b/c/d",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../../../../..",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/./c/./d/",
                "expectedOutput": "/a/b/c/d",
                "output": "/a/b/c/d",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../../../../..",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/./b/./c/./d/",
                "expectedOutput": "/a/b/c/d",
                "output": "/a/b/c/d",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "/a/../../../../../..",
                "expectedOutput": "/",
                "output": "/",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Simplified Canonical Path"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "12",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "226",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "11106",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "1234567890",
                "expectedOutput": "0",
                "output": "0",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "1111111111",
                "expectedOutput": "89",
                "output": "89",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "1010101010",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "2222222222",
                "expectedOutput": "89",
                "output": "89",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "9999999999",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "12345678901234567890",
                "expectedOutput": "0",
                "output": "0",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "11111111111111111111",
                "expectedOutput": "10946",
                "output": "10946",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "10101010101010101010",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "22222222222222222222",
                "expectedOutput": "10946",
                "output": "10946",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "99999999999999999999",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "123456789012345678901234567890",
                "expectedOutput": "0",
                "output": "0",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "111111111111111111111111111111",
                "expectedOutput": "1346269",
                "output": "1346269",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "101010101010101010101010101010",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "222222222222222222222222222222",
                "expectedOutput": "1346269",
                "output": "1346269",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "999999999999999999999999999999",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "1234567890123456789012345678901234567890",
                "expectedOutput": "0",
                "output": "0",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Decode Message"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "A man, a plan, a canal: Panama",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "race a car",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "No lemon, no melon",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Was it a car or a cat I saw?",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Step on no pets",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Eva, can I see bees in a cave?",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Mr. Owl ate my metal worm",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Madam, in Eden, I'm Adam",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Never odd or even",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Able was I ere I saw Elba",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "A Toyota's a Toyota",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "A nut for a jar of tuna",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Are we not pure? \"No sir!\" Panama's moody Noriega brags. \"It is garbage!\" Irony dooms a man; a prisoner up to new era.",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Go hang a salami I'm a lasagna hog",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Red roses run no risk, sir, on Nurse's order",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Ma is a nun, as I am",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Evil is a name of a foeman, as I live",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "A man, a plan, a cat, a ham, a yak, a yam, a hat, a canal-Panama!",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Able, was I saw Elba",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "A man, a plan, a canal, Panama",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "A man, a plan, a canal, Panama!",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "A man, a plan, a canal, Panama.",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Palindrome Check"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "the sky is blue ",
                "expectedOutput": "blue is sky the",
                "output": "blue is sky the",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "  hello world   ",
                "expectedOutput": "world hello",
                "output": "world hello",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "a good   example ",
                "expectedOutput": "example good a",
                "output": "example good a",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "coding is fun",
                "expectedOutput": "fun is coding",
                "output": "fun is coding",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "  reverse words  ",
                "expectedOutput": "words reverse",
                "output": "words reverse",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "  multiple   spaces  ",
                "expectedOutput": "spaces multiple",
                "output": "spaces multiple",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "  single word  ",
                "expectedOutput": "word single",
                "output": "word single",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "  ",
                "expectedOutput": "",
                "output": "",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "a",
                "expectedOutput": "a",
                "output": "a",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "a b c d e f g h i j k l m n o p q r s t u v w x y z",
                "expectedOutput": "z y x w v u t s r q p o n m l k j i h g f e d c b a",
                "output": "z y x w v u t s r q p o n m l k j i h g f e d c b a",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "  a b c d e f g h i j k l m n o p q r s t u v w x y z  ",
                "expectedOutput": "z y x w v u t s r q p o n m l k j i h g f e d c b a",
                "output": "z y x w v u t s r q p o n m l k j i h g f e d c b a",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Reverse Words in a String"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "eceba",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "ccaabbb",
                "expectedOutput": "5",
                "output": "5",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abcabcabc",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbbccdd",
                "expectedOutput": "5",
                "output": "5",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaa",
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abababab",
                "expectedOutput": "8",
                "output": "8",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "",
                "expectedOutput": "0",
                "output": "0",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "a",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aa",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaa",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaa",
                "expectedOutput": "4",
                "output": "4",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaa",
                "expectedOutput": "5",
                "output": "5",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaa",
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaa",
                "expectedOutput": "7",
                "output": "7",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaaa",
                "expectedOutput": "8",
                "output": "8",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaaaa",
                "expectedOutput": "9",
                "output": "9",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaaaaa",
                "expectedOutput": "10",
                "output": "10",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaaaaaa",
                "expectedOutput": "11",
                "output": "11",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaaaaaaa",
                "expectedOutput": "12",
                "output": "12",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aaaaaaaaaaaaa",
                "expectedOutput": "14",
                "output": "13",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "aaaaaaaaaaaaaa",
                "output": "14",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            }
        ],
        "title": "Longest Substring with At Most Two Distinct Characters"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": 1,
                "expectedOutput": "A",
                "output": "A",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 28,
                "expectedOutput": "AB",
                "output": "AB",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 701,
                "expectedOutput": "ZY",
                "output": "ZY",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 52,
                "expectedOutput": "AZ",
                "output": "AZ",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 100,
                "expectedOutput": "CV",
                "output": "CV",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 26,
                "expectedOutput": "Z",
                "output": "Z",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 27,
                "expectedOutput": "AA",
                "output": "AA",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 1000,
                "expectedOutput": "ALL",
                "output": "ALL",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 10000,
                "expectedOutput": "NTP",
                "output": "NTP",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 123456,
                "expectedOutput": "AICCC",
                "output": "FZPH",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 987654,
                "expectedOutput": "HJHJH",
                "output": "BDDZR",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 231,
                "expectedOutput": "HJ",
                "output": "HW",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 456,
                "expectedOutput": "RM",
                "output": "QN",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 789,
                "expectedOutput": "AD",
                "output": "ADI",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 999,
                "expectedOutput": "ALLL",
                "output": "ALK",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 100000,
                "expectedOutput": "CFD",
                "output": "EQXD",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 999999,
                "expectedOutput": "HJHJHJ",
                "output": "BDWGM",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 1234567,
                "expectedOutput": "LJHJHJ",
                "output": "BRFGI",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 9876543,
                "expectedOutput": "HJHJHJH",
                "output": "UOXGA",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 23123123,
                "expectedOutput": "HJHJHJHJ",
                "output": "AXOOTW",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            }
        ],
        "title": "Excel Sheet Column Title"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "A",
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "B",
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "C",
                "expectedOutput": "3",
                "output": "3",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "Z",
                "expectedOutput": "26",
                "output": "26",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "AA",
                "expectedOutput": "27",
                "output": "27",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "AB",
                "expectedOutput": "28",
                "output": "28",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "ZY",
                "expectedOutput": "701",
                "output": "701",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "FXSHRXW",
                "expectedOutput": "2147483647",
                "output": "2147483647",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Excel Sheet Column Number"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": 19,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 2,
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 7,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 10,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 13,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 20,
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 23,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 28,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 31,
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 32,
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 44,
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 49,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 68,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 70,
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 79,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 82,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 86,
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 91,
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 94,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 97,
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Happy Number"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "69",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "88",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "962",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "0",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "1",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "11",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "101",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "121",
                "expectedOutput": true,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "609",
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "808",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "906",
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "1001",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "1111",
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "1234",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "6789",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "10001",
                "expectedOutput": false,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "11111",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "12321",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "67876",
                "expectedOutput": true,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "90009",
                "expectedOutput": true,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": "91119",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Strobogrammatic Number"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": 38,
                "expectedOutput": "2",
                "output": "2",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 0,
                "expectedOutput": "0",
                "output": "9",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 9,
                "expectedOutput": "9",
                "output": "9",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 123,
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 456,
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 789,
                "expectedOutput": "6",
                "output": "6",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 100,
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 999,
                "expectedOutput": "9",
                "output": "9",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 123456789,
                "expectedOutput": "9",
                "output": "9",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Sum of Digits"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": 1,
                "expectedOutput": "1",
                "output": "1",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 5,
                "expectedOutput": "5",
                "output": "5",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 10,
                "expectedOutput": "12",
                "output": "12",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 15,
                "expectedOutput": "24",
                "output": "24",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 20,
                "expectedOutput": "36",
                "output": "36",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 25,
                "expectedOutput": "45",
                "output": "54",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 30,
                "expectedOutput": "60",
                "output": "80",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 50,
                "expectedOutput": "150",
                "output": "243",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 100,
                "expectedOutput": "384",
                "output": "1536",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 150,
                "expectedOutput": "675",
                "output": "5832",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 200,
                "expectedOutput": "960",
                "output": "16200",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 500,
                "expectedOutput": "51200000",
                "output": "937500",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 1000,
                "expectedOutput": "51200000",
                "output": "51200000",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": 1500,
                "expectedOutput": "51200000",
                "output": "859963392",
                "stderr": "",
                "stdout": "",
                "testPassed": false
            },
            {
                "input": 1690,
                "expectedOutput": "2123366400",
                "output": "2123366400",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Ugly Number"
    },
    {
        "code": 200,
        "message": "OK",
        "data": [
            {
                "input": "aab",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "code",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "carerac",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "abc",
                "expectedOutput": false,
                "output": "False",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "a",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aa",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbaa",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabba",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabb",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbcc",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccd",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccdd",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccdde",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeff",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeffgg",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeffgghh",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeffgghhi",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeffgghhii",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeffgghhiijj",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            },
            {
                "input": "aabbccddeeffgghhiijjkk",
                "expectedOutput": true,
                "output": "True",
                "stderr": "",
                "stdout": "",
                "testPassed": true
            }
        ],
        "title": "Palindrome Permutation"
    }
]